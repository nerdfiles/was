// Generated by CoffeeScript 1.11.1

/*
@fileOverview ./src/assets/environment.coffee
 */
var Parser, Request, _, environment;

_ = require('lodash');

Request = require('./request');

Parser = require('./parser');

environment = function(event, context, callback, action, middlewares) {

  /*
  @name environment
   */
  var env, err, middleware, req, res, stage, wares;
  stage = event.requestContext.stage.toUpperCase();
  env = {
    stage: stage,
    debug: ['DEV', 'QA', 'TEST'].indexOf(stage) >= -1
  };
  if (!_.isArray(middlewares)) {
    middlewares = [];
  }
  middleware = [];
  try {
    req = new Request(event, new Parser());
    middleware = middlewares.map(function(m) {
      return new m(req, env);
    });
    wares = middleware.map(function(item) {
      return item.create();
    });
    res = action.apply(null, [req, env].concat(wares));
    return context.done(null, res.render());
  } catch (error) {
    err = error;
    return context.done(err);
  } finally {
    middlewares.forEach(function(middleware) {
      return middleware.destroy();
    });
  }
};

export default environment;
